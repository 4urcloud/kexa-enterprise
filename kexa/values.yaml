# Default values for kexa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/

nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

servicefront:
  type: ClusterIP
  port: 9000

serviceapi:
  type: ClusterIP
  port: 4012

servicecronicle:
  type: ClusterIP
  port: 3012


# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
# --------------------------------------------------------------------------------------------- #
# secret pull secret for pulling images from a private repository

# secretpull:
#   name: kexa-pull-secret
#   dockerserver: "https://registry-1.docker.io/v2/"
#   dockerusername: "kexa"
#   dockerpassword: "blabla" # replace with your docker token


# --------------------------------------------------------------------------------------------- #
# This is for setting up the postgresql service
postgresql:
  auth:
    database: "kexabdd"
    password: "admn45"
    username: "kexaadmin"
    postgresPassword: "admn45"
# --------------------------------------------------------------------------------------------- #
# This is for setting up the SEQ service
seq:
  acceptEULA: "Y"
  ui:
    enabled: true
  persistence:
    enabled: true
    size: 10Gi
# --------------------------------------------------------------------------------------------- #
# This is for setting up the keycloack service
keycloack:
  serviceAccount:
    create: true
  service:
    httpPort: 80
  extraEnv: |
    - name: KC_BOOTSTRAP_ADMIN_USERNAME
      value: admin
    - name: KC_BOOTSTRAP_ADMIN_PASSWORD
      value: admin
    - name: KEYCLOAK_ADMIN
      value: admin
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: admin
    - name: KC_HEALTH_ENABLED
      value: true
  command: ["start-dev"]
  ports:
    - "8080:8080"

# --------------------------------------------------------------------------------------------- #
# This is for setting up frontend
kexafront:
  environment:
    KEYCLOAK_URL: "http://kexa-keycloak-headless.kexa.svc.cluster.local:8080/"
    KEYCLOAK_REALM: "latestRealm" # default Realm
    URL_API_HOST: "http://kexa-api.kexa.svc.cluster.local:4012/api" # Kexa API url (ending with /api)
    CRONICLE_URL: "http://kexa-cronicle.kexa.svc.cluster.local:3012/api" # Cronicle API url (ending with /api)
# --------------------------------------------------------------------------------------------- #
# This is for setting up api
kexaapi:
  environment:
    KEYCLOAK_URL: "http://kexa-keycloack-headless.kexa.svc.cluster.local:8080/"
    KEYCLOAK_PASSWORD: admin
    KEYCLOAK_USER: admin
    KEXA_URL: "http://kexa-frontend.kexa.svc.cluster.local:9000/*"
    PORT: 4012
    SEQ_URL: "http://kexa-seq.kexa.svc.cluster.local:5341"
    DATASOURCE_TYPE: postgres # mysql or postgres
    DS_HOST: bddpostgresql
    DS_PORT: 5432
    DS_USER: admin
    DS_PASSWORD: admn45
    DS_DATABASE: kexabdd
    DS_NAME: kexabdd
    SECRET_KEY: secretKey # same as in Cronicle DinD
    SECRET_IV: secretIV # same as in Cronicle DinD
    ENCRYPTION_METHOD: AES-256-CBC # same as Cronicle DinD
    DEFAULT_CLIENT_PASSWORD: defaultPassword # Choose init password, will be changed on first login
    DEFAULT_REALM_NAME: latestRealm # default Realm: same as in Kexa Frontend
    DEFAULT_API_KEY_NAME: KexaDefaultApiKey # same as in Cronicle DinD
    DEFAULT_API_KEY: "14e2511a-5d3f-4a4a-83e5-e6dead9f8bfb" # generate an uid
    CRONICLE_URL: "http://kexa-cronicle.kexa.svc.cluster.local:3012/api"
    CRONICLE_API_KEY: "thisIsACroniclz19çJDàjdaàandàa" # as you want but same in Cronicle
    HELM_APP_NAME: kexa-helm
# --------------------------------------------------------------------------------------------- #
# This is for setting cronicle
kexacronicle:
  environment:
    API_KEY: "thisIsACroniclz19çJDàjdaàandàa" # CRONICLE_API_KEY in Kexa API
    INTERFACE_CONFIGURATION_ENABLED: "true" # true for saas
    API_SECRET_KEY: "secretKey" # same as the one in Kexa API
    API_SECRET_IV: "secretIV" # same as the one in Kexa API
    API_ENCRYPTION_METHOD: "AES-256-CBC" # same as the one in Kexa API
    KEXA_API_URL: "http://kexa-api.kexa.svc.cluster.local:4012/api"
    KEXA_API_TOKEN_NAME: "KexaDefaultApiKey" # DEFAULT_API_KEY_NAME in Kexa API
    KEXA_API_TOKEN: "14e2511a-5d3f-4a4a-83e5-e6dead9f8bfb" # DEFAULT_API_KEY in Kexa API
# --------------------------------------------------------------------------------------------- #
# This is for setting up the Grafana service
grafana:
  ports:
    - "8082:3000"
  environment:
    - GF_SECURITY_ADMIN_USER=admin
    - GF_SECURITY_ADMIN_PASSWORD=admn45
    - GF_DATABASE_TYPE=postgres
    - GF_DATABASE_HOST=bddpostgresql
    - GF_DATABASE_NAME=kexabdd
    - GF_DATABASE_USER=admin
    - GF_DATABASE_PASSWORD=admn45
    - GF_DATABASE_SSL_MODE=disable
    - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    - GF_ANALYTICS_REPORTING_ENABLED=false